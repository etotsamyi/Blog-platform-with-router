{"version":3,"sources":["Actions/api.js","Actions/index.js","routes.js","Components/Login/Login.jsx","Components/Login/index.js","Components/Register/Register.jsx","Components/Register/index.js","Components/Header/Header.jsx","Components/Header/index.js","Components/Main/Main.jsx","Components/Main/index.js","Components/AddArticle/AddArticle.jsx","Components/AddArticle/index.js","Components/SingleArticle/SingleArticle.jsx","Components/SingleArticle/index.js","Container/App.jsx","Container/index.js","Reducers/index.js","serviceWorker.js","index.jsx"],"names":["instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","common","Authorization","login","createAction","loginSuccess","loginFailure","logout","register","registerSuccess","registerFailure","createArticleRequest","createArticleSuccess","createArticleFailure","getArticlesRequest","getArticlesSuccess","getArticlesFailure","putFavoriteRequest","putFavoriteSuccess","putFavoriteFailure","unPutFavoriteRequest","unPutFavoriteSuccess","unPutFavoriteFailure","getTotalArticlesCount","switchPage","getSingleArticleRequest","getSingleArticleSuccess","getSingleArticleFailure","clearSingleArticle","expandText","startEditing","endEditing","editArticleRequest","editArticleSuccess","editArticleFailure","loginUser","values","dispatch","a","post","user","response","data","username","status","message","success","setItem","error","logoutUser","removeItem","registerUser","getArticleList","page","offset","get","articles","map","article","expanded","articlesCount","makeFav","slug","makeUnfav","delete","getArticle","home","main","add_article","mapDispatchToProps","signin","actions","connect","Login","state","userStatus","props","className","initialValues","email","password","onSubmit","errors","touched","handleChange","handleBlur","isSubmitting","required","name","onChange","onBlur","value","Password","type","htmlType","to","routes","SignupSchema","yup","shape","max","min","Register","registerStatus","validationSchema","as","Button","signout","Header","userName","loggedIn","UserOutlined","onClick","LogoutOutlined","Main","articleList","currentPage","renderLoader","active","size","onLoad","length","PlusCircleOutlined","Array","isArray","heading","title","description","body","author","likesCount","favoritesCount","tagList","createdTime","createdAt","favorited","key","style","display","HeartTwoTone","twoToneColor","tag","formatDistanceToNow","Date","locale","ru","addSuffix","window","scrollTo","showSizeChanger","defaultCurrent","defaultPageSize","total","hideOnSinglePage","TextArea","Input","createArticle","editArticle","put","AddArticle","isEditing","singleArticle","withRouter","history","submitCreating","valuesWithTags","split","push","submitEditing","LeftCircleOutlined","join","rows","SingleArticle","match","params","EditOutlined","loginWithJWT","App","localStoreToken","exact","path","component","handleActions","_state","payload","el","favoriteFetch","editFetch","combineReducers","Boolean","location","hostname","store","createStore","reducers","compose","applyMiddleware","ReduxThunk","ReactDOM","render","classname","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c89602c4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://conduit.productionready.io/api\",\r\n});\r\n\r\ninstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.common.Authorization = `Token ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default instance;","import axios from \"axios\";\r\nimport { createAction } from \"redux-actions\";\r\nimport { message } from \"antd\";\r\nimport instance from \"./api\";\r\n\r\nexport const login = createAction(\"LOGIN_REQUEST\");\r\nexport const loginSuccess = createAction(\"LOGIN_SUCCESS\");\r\nexport const loginFailure = createAction(\"LOGIN_FAILURE\");\r\nexport const logout = createAction(\"LOGOUT\");\r\n\r\nexport const register = createAction(\"REGISTER_REQUEST\");\r\nexport const registerSuccess = createAction(\"REGISTER_SUCCESS\");\r\nexport const registerFailure = createAction(\"REGISTER_FAILURE\");\r\n\r\nexport const createArticleRequest = createAction(\"CREATE_REQUEST\");\r\nexport const createArticleSuccess = createAction(\"CREATE_SUCCESS\");\r\nexport const createArticleFailure = createAction(\"CREATE_FAILURE\");\r\n\r\nexport const getArticlesRequest = createAction(\"GET_ARTICLES_REQUEST\");\r\nexport const getArticlesSuccess = createAction(\"GET_ARTICLES_SUCCESS\");\r\nexport const getArticlesFailure = createAction(\"GET_ARTICLES_FAILURE\");\r\n\r\nexport const putFavoriteRequest = createAction(\"LIKE_REQUEST\");\r\nexport const putFavoriteSuccess = createAction(\"LIKE_SUCCESS\");\r\nexport const putFavoriteFailure = createAction(\"LIKE_FAILURE\");\r\nexport const unPutFavoriteRequest = createAction(\"DISLIKE_REQUEST\");\r\nexport const unPutFavoriteSuccess = createAction(\"DISLIKE_SUCCESS\");\r\nexport const unPutFavoriteFailure = createAction(\"DISLIKE_FAILURE\");\r\n\r\nexport const getTotalArticlesCount = createAction(\"GET_TOTAL_ARTICLES_COUNT\");\r\nexport const switchPage = createAction(\"SWITCH_PAGE\");\r\n\r\nexport const getSingleArticleRequest = createAction(\"GET_ARTICLE_REQUEST\");\r\nexport const getSingleArticleSuccess = createAction(\"GET_ARTICLE_SUCCESS\");\r\nexport const getSingleArticleFailure = createAction(\"GET_ARTICLE_FAILURE\");\r\nexport const clearSingleArticle = createAction(\"CLEAR_ARTICLE\");\r\n\r\nexport const expandText = createAction(\"EXPAND_COLLAPSE_TEXT\");\r\n\r\nexport const startEditing = createAction(\"START_EDITING\");\r\nexport const endEditing = createAction(\"END_EDITING\");\r\n\r\nexport const editArticleRequest = createAction(\"EDIT_REQUEST\");\r\nexport const editArticleSuccess = createAction(\"EDIT_SUCCESS\");\r\nexport const editArticleFailure = createAction(\"EDIT_FAILURE\");\r\n\r\nexport const loginWithJWT = () => async (dispatch) => {\r\n  dispatch(login());\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await axios.get(\r\n      \"https://conduit.productionready.io/api/user\",\r\n      {\r\n        headers: {\r\n          Authorization: `Token ${token}`,\r\n        },\r\n      }\r\n    );\r\n    if (response.status === 200) {\r\n      const { username, token } = response.data.user;\r\n      dispatch(\r\n        loginSuccess({\r\n          username: username,\r\n          token: token,\r\n        })\r\n      );\r\n    }\r\n  } catch (error) {\r\n    dispatch(loginFailure());\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const loginUser = (values) => async (dispatch) => {\r\n  dispatch(login());\r\n  try {\r\n    const response = await axios.post(\r\n      \"https://conduit.productionready.io/api/users/login\",\r\n      { user: values }\r\n    );\r\n    const { token, username } = response.data.user;\r\n    if (response.status === 200) {\r\n      message.success(`Добро пожаловать ${username}`);\r\n      localStorage.setItem(\"token\", token);\r\n      dispatch(\r\n        loginSuccess({\r\n          username: username,\r\n          token: token,\r\n        })\r\n      );\r\n    }\r\n  } catch (error) {\r\n    message.error(\"Пара логин и пароль не найдена\");\r\n    dispatch(loginFailure());\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n  localStorage.removeItem(\"token\");\r\n  dispatch(logout());\r\n};\r\n\r\nexport const registerUser = (values) => async (dispatch) => {\r\n  dispatch(register());\r\n  try {\r\n    const response = await axios.post(\r\n      \"https://conduit.productionready.io/api/users\",\r\n      { user: values }\r\n    );\r\n    if (response.status === 200) {\r\n      message.success(\"Вы успешно зрегистрированы!\");\r\n      dispatch(registerSuccess());\r\n    }\r\n  } catch (error) {\r\n    message.error(\"Email или имя пользователя уже зарегистрированы!\");\r\n    dispatch(registerFailure());\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createArticle = (values) => async (dispatch) => {\r\n  dispatch(createArticleRequest());\r\n  try {\r\n    const response = await instance.post(\"/articles\", { article: values });\r\n    if (response.status === 200) {\r\n      message.success(\"Успешно!\");\r\n      dispatch(createArticleSuccess(response.data.article));\r\n      getArticleList(1);\r\n      // setTimeout(() => window.history.back(), 1000);\r\n    }\r\n  } catch (error) {\r\n    dispatch(createArticleFailure());\r\n  }\r\n};\r\n\r\nexport const getArticleList = (page) => async (dispatch) => {\r\n  dispatch(getArticlesRequest());\r\n  try {\r\n    const offset = (page - 1) * 10;\r\n    const response = await instance.get(`/articles?limit=10&offset=${offset}`);\r\n    if (response.status === 200) {\r\n      response.data.articles.map((article) => (article.expanded = false));\r\n      dispatch(getArticlesSuccess(response.data.articles));\r\n      dispatch(getTotalArticlesCount(response.data.articlesCount));\r\n    }\r\n  } catch (error) {\r\n    dispatch(createArticleFailure());\r\n  }\r\n};\r\n\r\nexport const makeFav = (slug) => async (dispatch) => {\r\n  dispatch(putFavoriteRequest());\r\n  try {\r\n    const response = await instance.post(`/articles/${slug}/favorite`);\r\n    if (response.status === 200) {\r\n      dispatch(putFavoriteSuccess({slug, article: response.data.article}))\r\n    }\r\n  } catch (error) {\r\n    dispatch(putFavoriteFailure(error))\r\n  }\r\n}\r\n\r\nexport const makeUnfav = (slug) => async (dispatch) => {\r\n  dispatch(unPutFavoriteRequest());\r\n  try {\r\n    const response = await instance.delete(`/articles/${slug}/favorite`);\r\n    if (response.status === 200) {\r\n      dispatch(unPutFavoriteSuccess({slug, article: response.data.article}))\r\n    }\r\n  } catch (error) {\r\n    dispatch(unPutFavoriteFailure())\r\n  }\r\n}\r\n\r\nexport const getArticle = (slug) => async (dispatch) => {\r\n  dispatch(getSingleArticleRequest());\r\n  try {\r\n    const response = await instance.get(`/articles/${slug}`);\r\n    if (response.status === 200) {\r\n      dispatch(getSingleArticleSuccess(response.data.article));\r\n    }\r\n  } catch (error) {\r\n    dispatch(getSingleArticleFailure());\r\n  }\r\n};\r\n\r\nexport const editArticle = (values, slug) => async (dispatch) => {\r\n  dispatch(editArticleRequest());\r\n  try {\r\n    const response = await instance.put(`/articles/${slug}`, {\r\n      article: values,\r\n    });\r\n    if (response.status === 200) {\r\n      message.success(\"Успешно!\");\r\n      dispatch(getSingleArticleSuccess(response.data.article));\r\n      dispatch(editArticleSuccess());\r\n    }\r\n  } catch (error) {\r\n    dispatch(editArticleFailure());\r\n  }\r\n};\r\n","export const home = \"/Blog-platform-with-router\";\r\nexport const login = `${home}/login`;\r\nexport const register = `${home}/register`;\r\nexport const main = `${home}/articles`;\r\nexport const add_article = `${main}/add`;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../../Actions\";\nimport { Input, Button, Divider } from \"antd\";\nimport * as routes from \"../../routes.js\";\nimport \"antd/dist/antd.css\";\nimport \"./login.css\";\n\nconst mapStateToProps = (state) => {\n  const props = {\n    username: state.user.username,\n    token: state.user.token,\n    signin: actions.loginUser,\n    userStatus: state.user,\n  };\n\n  return props;\n};\n\nconst mapDispatchToProps = {\n  signin: actions.loginUser,\n};\n\nfunction Login(props) {\n  const { signin } = props;\n\n  return (\n    <div className=\"login-form\">\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        // validationSchema={SignupSchema}\n        onSubmit={(values) => signin(values)}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isSubmitting,\n        }) => (\n          <div className={isSubmitting ? \"submitting-form\" : \"\"}>\n            <Form className=\"login-form___login\">\n              <label>\n                Email:\n                <Input\n                  required\n                  className={errors.email && touched.email && \"error\"}\n                  name=\"email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                />\n              </label>\n              <label>\n                Пароль:\n                <Input.Password\n                  required\n                  className={errors.password && touched.password && \"error\"}\n                  name=\"password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                />\n              </label>\n              <Button\n                className=\"submit-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Войти\n              </Button>\n            </Form>\n            <Divider />\n            <Link className=\"login-form__register\" to={routes.register}>\n              Регистрация\n            </Link>\n          </div>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import Login from './Login';\r\n\r\nexport default Login;","import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Input, Button, Divider } from \"antd\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../Actions\";\nimport \"antd/dist/antd.css\";\nimport \"./register.css\";\nimport * as routes from \"../../routes.js\";\nimport * as yup from 'yup';\n\nconst SignupSchema = yup.object().shape({\n  username: yup.string().max(50, 'Слишком длинное имя').required('Поле обязательно для заполнения'),\n  email: yup.string().email('Неверный email').required('Поле обязательно для заполнения'),\n  password: yup\n    .string()\n    .min(8, 'Пароль должен содержать не менее 8 символов')\n    .max(40, 'Пароль должен содержать не более 40 символов')\n    .required('Поле обязательно для заполнения'),\n});\n\nconst mapStateToProps = (state) => {\n  const props = {\n    registerUser: actions.registerUser,\n    registerStatus: state.registerStatus,\n    token: state.user.token,\n  };\n\n  return props;\n};\n\nconst mapDispatchToProps = {\n  registerUser: actions.registerUser,\n};\n\nfunction Register(props) {\n  const { registerUser } = props;\n\n  if (props.registerStatus === \"register-success\") {\n    return <Redirect to={routes.login} />;\n  }\n\n  return (\n    <div className=\"register-form\">\n      <Formik\n        initialValues={{\n          username: \"\",\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={(values) => {\n          registerUser(values);\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isSubmitting,\n        }) => (\n          <div className={isSubmitting ? \"submitting-form\" : \"\"}>\n            <Form className=\"register-form___registration\">\n              <label>\n                Имя пользователя:\n                <Input\n                  className={errors.username && touched.username && \"error\"}\n                  required\n                  name=\"username\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.username}\n                />\n              </label>\n              <label>\n                Email:\n                <Input\n                  className={errors.email && touched.email && \"error\"}\n                  required\n                  name=\"email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                />\n              </label>\n              {errors.email && touched.email && (\n                  <div className=\"input-error\">{errors.email}</div>\n                )}\n              <label>\n                Пароль:\n                <Input.Password\n                  className={errors.password && touched.password && \"error\"}\n                  required\n                  name=\"password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-error\">{errors.password}</div>\n                )}\n              </label>\n              <Button\n                className=\"submit-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Регистрация\n              </Button>\n            </Form>\n            <Divider />\n            <Link className=\"register-form__signin\" as={Button} to={routes.login}>\n              Войти\n            </Link>\n          </div>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","import Register from './Register';\r\n\r\nexport default Register;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Spin } from \"antd\";\r\nimport { UserOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport * as actions from \"../../Actions\";\r\nimport * as routes from \"../../routes.js\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./header.css\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  const props = {\r\n    user: state.user,\r\n    userName: state.user.username,\r\n    loggedIn: state.loggedIn,\r\n    signout: actions.logoutUser,\r\n  };\r\n\r\n  return props;\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  signout: actions.logoutUser,\r\n};\r\n\r\nfunction Header(props) {\r\n  const { userName, signout, user } = props;\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div>\r\n        Пользователь: <UserOutlined />\r\n        {user === \"requested\" ? <Spin /> : userName}\r\n      </div>\r\n      <Button className=\"header__logout\" onClick={signout} to={routes.home}>\r\n        <LogoutOutlined /> Выйти\r\n      </Button>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import Header from './Header';\r\n\r\nexport default Header;","import React from \"react\";\nimport { BackTop, Skeleton, Divider, Tag, Pagination, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport {\n  PlusCircleOutlined,\n  HeartTwoTone,\n  UserOutlined,\n} from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport * as routes from \"../../routes.js\";\nimport Header from \"../Header\";\nimport \"antd/dist/antd.css\";\nimport \"./main.css\";\nimport * as actions from \"../../Actions\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\n\nconst mapStateToProps = (state) => {\n  const props = {\n    getArticleList: actions.getArticleList,\n    switchPage: actions.switchPage,\n    getArticle: actions.getArticle,\n    expandText: actions.expandText,\n    articleList: state.articleList,\n    currentPage: state.currentPage,\n    articlesCount: state.articlesCount,\n  };\n\n  return props;\n};\n\nconst mapDispatchToProps = {\n  getArticleList: actions.getArticleList,\n  switchPage: actions.switchPage,\n  getArticle: actions.getArticle,\n  expandText: actions.expandText,\n  endEditing: actions.endEditing,\n  makeFav: actions.makeFav,\n  makeUnfav: actions.makeUnfav,\n};\n\nfunction Main(props) {\n  const {\n    articleList,\n    getArticleList,\n    switchPage,\n    articlesCount,\n    currentPage,\n    getArticle,\n    expandText,\n    endEditing,\n    makeFav,\n    makeUnfav,\n  } = props;\n\n  const renderPagination = () => {\n    return (\n      <Pagination\n        onChange={(page) => {\n          switchPage(page);\n          window.scrollTo(0, 0);\n          getArticleList(page);\n        }}\n        showSizeChanger={false}\n        defaultCurrent=\"1\"\n        defaultPageSize=\"10\"\n        total={articlesCount}\n        hideOnSinglePage\n      />\n    );\n  };\n\n  const renderArticle = (\n    heading,\n    description,\n    body,\n    slug,\n    author,\n    likesCount,\n    tagList,\n    createdTime,\n    expanded,\n    favorited\n  ) => {\n    return (\n      <div key={slug} className=\"main__wall__post\">\n        <Link\n          onClick={() => getArticle(slug)}\n          to={`${routes.main}/${slug}`}\n          className=\"main__wall__post__heading\"\n        >\n          <h3>\n            {heading}\n            <p className=\"main__wall__post__author\">\n              Автор: <UserOutlined />\n              {author}\n            </p>\n          </h3>\n        </Link>\n        <p>{description}</p>\n        <p style={expanded ? { display: \"block\" } : { display: \"none\" }}>\n          {body}\n        </p>\n        <Button\n          onClick={() => {\n            expandText(slug);\n          }}\n        >\n          {expanded ? \"Свернуть\" : \"Развернуть\"}\n        </Button>\n        <Divider />\n        <div className=\"main__wall__post__footer\">\n          <p\n            onClick={!favorited ? () => makeFav(slug) : () => makeUnfav(slug)}\n            className=\"likes-count\"\n          >\n            <HeartTwoTone twoToneColor={favorited ? \"#ff0000\" : \"#43338e\"} />{\" \"}\n            {likesCount}\n          </p>\n          <div>\n            {tagList.map((tag) => (\n              <Tag className=\"main__wall__post__footer__tag\" key={tag}>\n                {tag}\n              </Tag>\n            ))}\n          </div>\n          <p>\n            {formatDistanceToNow(new Date(createdTime), {\n              locale: ru,\n              addSuffix: true,\n            })}\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  const renderLoader = () => {\n    return (\n      <div className=\"skeleton-loader\">\n        <Skeleton active size=\"large\" className=\"main__wall__loading\" />\n      </div>\n    );\n  };\n\n  const loadingArticles = () => {\n    if (articleList.length === 0) {\n      getArticleList(currentPage);\n    }\n  };\n\n  return (\n    <div onLoad={loadingArticles()} className=\"main\">\n      <Header />\n      <div className=\"main__wall\">\n        <Link\n          onClick={() => endEditing()}\n          to={routes.add_article}\n          className=\"main__wall__create\"\n        >\n          <PlusCircleOutlined />\n          СОЗДАТЬ\n        </Link>\n        {Array.isArray(articleList) ? (\n          articleList.map((article) => {\n            return renderArticle(\n              article.title,\n              article.description,\n              article.body,\n              article.slug,\n              article.author.username,\n              article.favoritesCount,\n              article.tagList,\n              article.createdAt,\n              article.expanded,\n              article.favorited\n            );\n          })\n        ) : (\n          <div>\n            {renderLoader()}\n            {renderLoader()}\n            {renderLoader()}\n            {renderLoader()}\n            {renderLoader()}\n            {renderLoader()}\n            {renderLoader()}\n            {renderLoader()}\n            {renderLoader()}\n            {renderLoader()}\n          </div>\n        )}\n      </div>\n      {renderPagination()}\n      <BackTop />\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import Main from './Main';\r\n\r\nexport default Main;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Input, Button } from \"antd\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { LeftCircleOutlined } from \"@ant-design/icons\";\r\nimport * as routes from \"../../routes.js\";\r\nimport * as actions from \"../../Actions\";\r\nimport Header from \"../Header\";\r\nimport \"./addArticle.css\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst mapStateToProps = (state) => {\r\n  const props = {\r\n    userName: state.user.username,\r\n    loggedIn: state.loggedIn,\r\n    isEditing: state.isEditing,\r\n    singleArticle: state.singleArticle,\r\n    currentPage: state.currentPage,\r\n  };\r\n\r\n  return props;\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  createArticle: actions.createArticle,\r\n  getArticleList: actions.getArticleList,\r\n  editArticle: actions.editArticle,\r\n};\r\n\r\nfunction AddArticle(props) {\r\n  const {\r\n    createArticle,\r\n    history,\r\n    getArticleList,\r\n    isEditing,\r\n    singleArticle,\r\n    editArticle,\r\n    currentPage,\r\n  } = props;\r\n\r\n  const submitCreating = async (values) => {\r\n    const valuesWithTags = {\r\n      title: values.title,\r\n      description: values.description,\r\n      body: values.body,\r\n      tagList: values.tagList ? values.tagList.split(\" \") : [],\r\n    };\r\n    await createArticle(valuesWithTags);\r\n    await getArticleList(1);\r\n    history.push(routes.main);\r\n  };\r\n\r\n  const submitEditing = async (values) => {\r\n    const valuesWithTags = {\r\n      title: values.title,\r\n      description: values.description,\r\n      body: values.body,\r\n      tagList: values.tagList ? values.tagList.split(\" \") : [\"\"],\r\n    };\r\n    await editArticle(valuesWithTags, singleArticle.slug);\r\n    await getArticleList(currentPage);\r\n    history.push(routes.main);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n      <main className=\"article-form\">\r\n        <h2>\r\n          <Link to={routes.main}>\r\n            <LeftCircleOutlined />\r\n          </Link>{\" \"}\r\n          {!isEditing ? \"Создать статью\" : \"Редактировать статью\"}\r\n        </h2>\r\n        <Formik\r\n          initialValues={{\r\n            title: !isEditing ? \"\" : singleArticle.title,\r\n            description: !isEditing ? \"\" : singleArticle.description,\r\n            body: !isEditing ? \"\" : singleArticle.body,\r\n            tagList: !isEditing ? \"\" : singleArticle.tagList.join(\" \"),\r\n          }}\r\n          onSubmit={\r\n            !isEditing\r\n              ? (values) => submitCreating(values)\r\n              : (values) => submitEditing(values)\r\n          }\r\n        >\r\n          {({ values, handleChange, handleBlur, isSubmitting }) => (\r\n            <div className={isSubmitting ? \"submitting-form\" : \"\"}>\r\n              <Form className=\"login-form___login\">\r\n                <label>\r\n                  Заголовок:\r\n                  <Input\r\n                    required\r\n                    className=\"title\"\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.title}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Описание:\r\n                  <Input\r\n                    required\r\n                    className=\"description\"\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.description}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Статья:\r\n                  <TextArea\r\n                    required\r\n                    className=\"body\"\r\n                    name=\"body\"\r\n                    rows={5}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.body}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Теги:\r\n                  <Input\r\n                    className=\"tagList\"\r\n                    name=\"tagList\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.tagList}\r\n                  />\r\n                </label>\r\n                <Button\r\n                  className=\"submit-button\"\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                >\r\n                  {!isEditing ? \"Написать\" : \"Сохранить\"}\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(AddArticle));\r\n","import AddArticle from './AddArticle';\r\n\r\nexport default AddArticle;","import React from \"react\";\r\nimport \"./singleArticle.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as routes from \"../../routes.js\";\r\nimport * as actions from \"../../Actions\";\r\nimport Header from \"../Header\";\r\nimport { Skeleton, Divider, Tag, Button } from \"antd\";\r\nimport {\r\n  HeartTwoTone,\r\n  UserOutlined,\r\n  LeftCircleOutlined,\r\n  EditOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  const props = {\r\n    // getArticle: actions.getArticle,\r\n    // startEditing: actions.startEditing,\r\n    singleArticle: state.singleArticle,\r\n    user: state.user,\r\n    // getArticleList: actions.getArticleList,\r\n    // switchPage: actions.switchPage,\r\n    // dispatchSlug: actions.dispatchSlug,\r\n    // articleList: state.articleList,\r\n    // currentPage: state.currentPage,\r\n    // articlesCount: state.articlesCount,\r\n  };\r\n\r\n  return props;\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getArticle: actions.getArticle,\r\n  startEditing: actions.startEditing,\r\n  clearSingleArticle: actions.clearSingleArticle,\r\n  makeFav: actions.makeFav,\r\n  makeUnfav: actions.makeUnfav,\r\n  // getArticleList: actions.getArticleList,\r\n  // switchPage: actions.switchPage,\r\n  // dispatchSlug: actions.dispatchSlug,\r\n};\r\n\r\nfunction SingleArticle(props) {\r\n  const {\r\n    getArticle,\r\n    singleArticle,\r\n    match,\r\n    startEditing,\r\n    clearSingleArticle,\r\n    user,\r\n    makeFav,\r\n    makeUnfav,\r\n  } = props;\r\n\r\n  const loadingArticle = () => {\r\n    if (singleArticle === \"\") {\r\n      getArticle(match.params.slug);\r\n    }\r\n  };\r\n\r\n  const renderLoader = () => {\r\n    return (\r\n      <div className=\"single-article__skeleton-loader\">\r\n        <Skeleton active size=\"large\" className=\"main__wall__loading\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderArticle = (\r\n    heading,\r\n    body,\r\n    author,\r\n    likesCount,\r\n    tagList,\r\n    createdTime,\r\n    slug,\r\n    favorited\r\n  ) => {\r\n    return (\r\n      <div className=\"article\">\r\n        <Link\r\n          onClick={() => clearSingleArticle()}\r\n          to={routes.main}\r\n          className=\"article__back-button\"\r\n        >\r\n          <LeftCircleOutlined />\r\n        </Link>\r\n        <div className=\"article__header\">\r\n          <div className=\"article__header__edit-button\">\r\n            {author === user.username ? (\r\n              <Link\r\n                onClick={() => startEditing(true)}\r\n                to={`${routes.main}/${slug}/edit`}\r\n              >\r\n                <EditOutlined />\r\n              </Link>\r\n            ) : null}\r\n          </div>\r\n          <h3 className=\"article__header__heading\">{heading}</h3>\r\n\r\n          <span className=\"\">\r\n            Автор: <UserOutlined />\r\n            {author}\r\n          </span>\r\n          <span>\r\n            {formatDistanceToNow(new Date(createdTime), {\r\n              locale: ru,\r\n              addSuffix: true,\r\n            })}\r\n          </span>\r\n        </div>\r\n        <p>{body}</p>\r\n        <Divider />\r\n        <div className=\"\">\r\n          <p\r\n            onClick={!favorited ? () => makeFav(slug) : () => makeUnfav(slug)}\r\n            className=\"likes-count\"\r\n          >\r\n            <HeartTwoTone twoToneColor={favorited ? \"#ff0000\" : \"#43338e\"} />{\" \"}\r\n            {likesCount}\r\n          </p>\r\n          <div>\r\n            {tagList.map((tag) => (\r\n              <Tag className=\"\" key={tag}>\r\n                {tag}\r\n              </Tag>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div onLoad={loadingArticle()} className=\"single-article-page\">\r\n      <Header />\r\n      {typeof singleArticle === \"object\"\r\n        ? renderArticle(\r\n            singleArticle.title,\r\n            singleArticle.body,\r\n            singleArticle.author.username,\r\n            singleArticle.favoritesCount,\r\n            singleArticle.tagList,\r\n            singleArticle.createdAt,\r\n            singleArticle.slug,\r\n            singleArticle.favorited\r\n          )\r\n        : renderLoader()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleArticle);\r\n","import SingleArticle from './SingleArticle';\r\n\r\nexport default SingleArticle;","import React from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport * as actions from \"../Actions\";\nimport { connect } from \"react-redux\";\nimport * as routes from \"../routes.js\";\nimport Login from \"../Components/Login\";\nimport Register from \"../Components/Register\";\nimport Main from \"../Components/Main\";\nimport AddArticle from \"../Components/AddArticle\";\nimport SingleArticle from \"../Components/SingleArticle\"\n\nconst mapStateToProps = (state) => {\n  const props = {\n    username: state.user.username,\n    token: state.user.token,\n    userStatus: state.user,\n    isEditing: state.isEditing,\n    registerStatus: state.registerStatus,\n  };\n\n  return props;\n};\n\nconst mapDispatchToProps = {\n  loginWithJWT: actions.loginWithJWT,\n};\n\nfunction App(props) {\n  const { loginWithJWT, token, isEditing } = props;\n  const localStoreToken = localStorage.getItem(\"token\");\n\n  const startTokenChecking = () => {\n    if (!localStoreToken && !token) {\n      return <Redirect to={routes.login} />;\n    }\n    if (localStoreToken && !token) {\n      loginWithJWT(localStoreToken);\n      return <Redirect to={routes.main} />;\n    }\n    return <Redirect to={routes.main} />;\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path={routes.home}>\n            {startTokenChecking()}\n          </Route>\n          <Route path={routes.login} exact component={Login}>\n            {localStoreToken ? <Redirect to={routes.main} /> : null}\n          </Route>\n          <Route path={routes.register} exact component={Register}>\n            {localStoreToken ? <Redirect to={routes.main} /> : null}\n          </Route>\n          <Route path={routes.main} exact component={Main}>\n            {!localStoreToken ? <Redirect to={routes.login} /> : null}\n          </Route>\n          <Route path={routes.add_article} exact component={AddArticle}>\n            {!localStoreToken ? <Redirect to={routes.login} /> : null}\n          </Route>\n          <Route path={`${routes.main}/:slug`} exact component={SingleArticle} />\n          <Route path={`${routes.main}/:slug/edit`} exact component={AddArticle}>\n            {!isEditing ? <Redirect to={routes.main} /> : null}\n          </Route>\n          <Route\n            path=\"*\"\n            component={() => \"404 ТАКОЙ СТРАНИЦЫ НЕ СУЩЕСТВУЕТ!\"}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import App from './App.jsx';\r\n\r\nexport default App;","import { combineReducers } from \"redux\";\r\nimport { handleActions } from \"redux-actions\";\r\nimport * as actions from \"../Actions\";\r\n\r\nconst user = handleActions(\r\n  {\r\n    [actions.login](_state) {\r\n      return \"requested\";\r\n    },\r\n    [actions.loginSuccess](_state, { payload: userData }) {\r\n      return userData;\r\n    },\r\n    [actions.loginFailure](_state) {\r\n      return \"error\";\r\n    },\r\n    [actions.logout](_state) {\r\n      return {};\r\n    },\r\n  },\r\n  {}\r\n);\r\n\r\nconst registerStatus = handleActions(\r\n  {\r\n    [actions.register](_state) {\r\n      return \"requested\";\r\n    },\r\n    [actions.registerSuccess](_state) {\r\n      return \"register-success\";\r\n    },\r\n    [actions.registerFailure](_state) {\r\n      return \"register-error\";\r\n    },\r\n  },\r\n  {}\r\n);\r\n\r\nconst createArticle = handleActions(\r\n  {\r\n    [actions.createArticleRequest](_state) {\r\n      return \"create-requested\";\r\n    },\r\n    [actions.createArticleSuccess](_state) {\r\n      return \"create-succes\";\r\n    },\r\n    [actions.createArticleFailure](_state) {\r\n      return \"create-error\";\r\n    },\r\n  },\r\n  {}\r\n);\r\n\r\nconst articleList = handleActions(\r\n  {\r\n    [actions.getArticlesRequest](_state) {\r\n      return \"getting-requested\";\r\n    },\r\n    [actions.getArticlesSuccess](_state, { payload: articles }) {\r\n      return [...articles];\r\n    },\r\n    [actions.getArticlesFailure](_state) {\r\n      return \"getting-error\";\r\n    },\r\n    [actions.expandText](_state, { payload: slug }) {\r\n      const newState = _state.map((article) => {\r\n        if (article.slug === slug) {\r\n          article.expanded = !article.expanded;\r\n          return article;\r\n        }\r\n        return article;\r\n      });\r\n      return newState;\r\n    },\r\n    [actions.putFavoriteSuccess](_state, { payload: data }) {\r\n      const { slug, article } = data;\r\n      const newState = _state.map((el) => {\r\n        if (el.slug === slug) {\r\n          return article;\r\n        }\r\n        return el;\r\n      });\r\n      return newState;\r\n    },\r\n    [actions.unPutFavoriteSuccess](_state, { payload: data }) {\r\n      const { slug, article } = data;\r\n      const newState = _state.map((el) => {\r\n        if (el.slug === slug) {\r\n          return article;\r\n        }\r\n        return el;\r\n      });\r\n      return newState;\r\n    },\r\n  },\r\n  []\r\n);\r\n\r\nconst articlesCount = handleActions(\r\n  {\r\n    [actions.getTotalArticlesCount](_state, { payload: totalCount }) {\r\n      return totalCount;\r\n    },\r\n  },\r\n  0\r\n);\r\n\r\nconst favoriteFetch = handleActions(\r\n  {\r\n    [actions.putFavoriteRequest](_state) {\r\n      return \"putting-requested\";\r\n    },\r\n    [actions.putFavoriteSuccess](_state) {\r\n      return \"putting-success\";\r\n    },\r\n    [actions.putFavoriteFailure](_state, { payload: error }) {\r\n      return error;\r\n    },\r\n    [actions.unPutFavoriteRequest](_state) {\r\n      return \"unputting-requested\";\r\n    },\r\n    [actions.unPutFavoriteSuccess](_state) {\r\n      return \"unputting-success\";\r\n    },\r\n    [actions.unPutFavoriteFailure](_state) {\r\n      return \"unputting-error\";\r\n    },\r\n  },\r\n  \"\"\r\n);\r\n\r\nconst currentPage = handleActions(\r\n  {\r\n    [actions.switchPage](_state, { payload: page }) {\r\n      return page;\r\n    },\r\n  },\r\n  1\r\n);\r\n\r\nconst singleArticle = handleActions(\r\n  {\r\n    [actions.getSingleArticleRequest](_state) {\r\n      return \"getting-requested\";\r\n    },\r\n    [actions.getSingleArticleSuccess](_state, { payload: article }) {\r\n      return article;\r\n    },\r\n    [actions.getSingleArticleFailure](_state) {\r\n      return \"getting-error\";\r\n    },\r\n    [actions.clearSingleArticle](_state) {\r\n      return \"\";\r\n    },\r\n    [actions.putFavoriteSuccess](_state, { payload: data }) {\r\n      const { article } = data;\r\n      return article;\r\n    },\r\n    [actions.unPutFavoriteSuccess](_state, { payload: data }) {\r\n      const { article } = data;\r\n      return article;\r\n    },\r\n  },\r\n  \"\"\r\n);\r\n\r\nconst isEditing = handleActions(\r\n  {\r\n    [actions.startEditing](_state) {\r\n      return true;\r\n    },\r\n    [actions.endEditing](_state) {\r\n      return false;\r\n    },\r\n  },\r\n  false\r\n);\r\n\r\nconst editFetch = handleActions(\r\n  {\r\n    [actions.editArticleRequest](_state) {\r\n      return \"edit-requested\";\r\n    },\r\n    [actions.editArticleSuccess](_state) {\r\n      return \"edit-success\";\r\n    },\r\n    [actions.editArticleFailure](_state) {\r\n      return \"edit-error\";\r\n    },\r\n  },\r\n  {}\r\n);\r\n\r\nexport default combineReducers({\r\n  user,\r\n  registerStatus,\r\n  createArticle,\r\n  articleList,\r\n  articlesCount,\r\n  currentPage,\r\n  singleArticle,\r\n  isEditing,\r\n  editFetch,\r\n  favoriteFetch,\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReduxThunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport './index.css';\nimport App from './Container';\nimport reducers from './Reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(ReduxThunk),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  )\n);\n\nReactDOM.render(\n  <Provider classname=\"store\" store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}